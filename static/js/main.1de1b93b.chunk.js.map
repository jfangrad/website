{"version":3,"sources":["assets/frontend.svg","assets/justin-image-cropped.png","assets/programming.svg","constants/Experience.js","constants/NavBar.js","assets/Github.js","assets/Mail.js","components/NavBar.js","sections/About.js","sections/Skills.js","assets/ExternalLink.js","sections/Experience.js","sections/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavItems","text","value","SocialLinks","icon","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","class","d","link","points","NavLink","navItem","selected","onClick","className","NavBar","useState","setSelected","section","document","getElementById","scrollIntoView","behavior","block","links","map","key","socialLinks","socialLink","href","target","rel","id","About","src","image","alt","SkillsItem","altText","title","description","SkillItems","frontend","programming","Skills","item","x1","y1","x2","y2","GroupedExperiences","index","companyName","companyLink","date","push","length","ExperienceItem","rightAlign","onRight","shouldRenderDivider","mappedDescriptions","classNames","dividerClassName","ExternalLink","Experience","group","rowIndex","Projects","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1de1b93b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/frontend.d78f60c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/justin-image-cropped.6735cbcc.png\";","module.exports = __webpack_public_path__ + \"static/media/programming.a19b0ba0.svg\";","export const Experiences = [\n  {\n    companyName: 'Sobol',\n    companyLink: 'https://sobol.io/',\n    title: 'Full Stack Developer',\n    date: 'May 2019 - Aug 2019',\n    description: [\n      'End to end full feature development utilizing JavaScript, React, Redux, Express, MongoDb, and Neo4J.',\n      'Focused on building systems to allow custom fields and UI within the application to allow for a more powerful and dynamic user experience'\n    ],\n  },\n  {\n    companyName: 'Shopify',\n    companyLink: 'https://www.shopify.ca/',\n    title: 'Front End Developer',\n    date: 'Sep 2018 - Dec 2018',\n    description: [\n      'Worked as a part of the Shopify App Store team and used tools including TypeScript, React, and GraphQL.',\n      'Focused on a complete rebuild of a complex form for submitting apps to the Shopify app store. This included leading research, prototyping, design, and build phases.'\n    ],\n  },\n  {\n    companyName: 'Vidyard',\n    companyLink: 'https://www.vidyard.com/',\n    title: 'Software Developer',\n    date: 'Jan 2018 - Apr 2018',\n    description: [\n      'Worked on the Vidyard GoVideo chrome extension and embedded web application used for recording, sharing, and managing videos.',\n      'Focused on a full application UX/UI redesign and application structure using JavaScript React, and Redux'\n    ],\n  },\n];\n\nconst BlankExperience = {\n  companyName: '',\n  companyLink: '',\n  title: '',\n  date: '',\n  description: [],\n}\n\nexport const GroupedExperiences = [];\nlet index = 0;\nfor (const item of Experiences) {\n  if (!GroupedExperiences[index]) {\n    GroupedExperiences[index] = [item];\n  } else {\n    GroupedExperiences[index].push(item);\n    index += 1;\n  }\n}\n\n// Ensure each group has 2 items\nif (GroupedExperiences[GroupedExperiences.length - 1].length === 1) {\n  GroupedExperiences[GroupedExperiences.length - 1].push(BlankExperience);\n}\n","import React from 'react';\nimport Github from \"../assets/Github\";\nimport Mail from '../assets/Mail';\n\nexport const NavItems = [\n  { text: 'About', value: 'about' },\n  { text: 'Skills', value: 'skills' },\n  { text: 'Experience', value: 'experience' },\n  { text: 'Projects', value: 'projects' },\n];\n\nexport const SocialLinks = [\n  { icon: <Github />, link: 'https://github.com/jfangrad' },\n  { icon: <Mail />, link: 'mailto:justin.fangrad@gmail.com'}\n];\n\nexport const ResumeDownloadLink = \"https://drive.google.com/uc?export=download&id=1G9g92n3QdM69WVXMJfCKk0SIoVSLMabU\";\n","import React from 'react';\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"feather feather-github\"\n  >\n    <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\n  </svg>\n);\n","import React from 'react';\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"feather feather-mail\"\n  >\n    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\n    <polyline points=\"22,6 12,13 2,6\"></polyline>\n  </svg>\n);\n","import React, { useState } from 'react';\nimport { ResumeDownloadLink, NavItems, SocialLinks } from '../constants/NavBar';\nimport './NavBar.scss';\n\nconst NavLink = ({navItem, selected, onClick}) =>  {\n  const className = selected ? \"NavBar-link--selected\" : \"NavBar-link\";\n\n  const onClickLink = () => onClick(navItem.value);\n\n  return (\n    <div className={className}>\n      <button onClick={onClickLink}>\n        {navItem.text}\n      </button>\n    </div>\n  );\n};\n\nconst NavBar = () => {\n  const [selected, setSelected] = useState(NavItems[0].value);\n\n  const onClick = (value) => {\n    const section = document.getElementById(value);\n    setSelected(value);\n    section.scrollIntoView({ behavior: 'smooth', block: 'start'})\n  };\n\n  const links = NavItems.map(navItem =>\n    <NavLink key={navItem.value} navItem={navItem} selected={selected === navItem.value} onClick={onClick} />,\n  );\n\n  const socialLinks = SocialLinks.map(socialLink => (\n    <a key={socialLink.link} className=\"NavBar-social-link\" href={socialLink.link} target=\"_blank\" rel=\"noopener noreferrer\">\n      {socialLink.icon}\n    </a>\n  ));\n\n  return (\n    <>\n      <div className=\"NavBar\">\n        <div className=\"NavBar-link-container\">\n          {links}\n        </div>\n        <div className=\"NavBar-social-links\">\n          <a className=\"NavBar-resume\" href={ResumeDownloadLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            Resume\n          </a>\n          {socialLinks}\n        </div>\n      </div>\n      {/* Give this the id 'about' so that scrollIntoView scrolls all the way to the top of page */}\n      <div className=\"NavBar-placeholder\" id=\"about\" />\n    </>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport image from '../assets/justin-image-cropped.png'\nimport './About.scss';\n\nconst About = () => (\n  <div className=\"Section Section-Primary About\">\n    <div className=\"About-info\">\n      <div className=\"About-info-name Section-header\">\n        Justin Fangrad\n      </div>\n      <div className=\"About-info-occupation\">\n        Software Developer\n      </div>\n      <div className=\"About-info-description\">\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident.</p>\n      </div>\n    </div>\n    <div className=\"About-image\">\n      <img src={image} alt=\"Pitcure of Justin Fangrad\" />\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport frontend from '../assets/frontend.svg';\nimport programming from '../assets/programming.svg';\nimport './Skills.scss';\n\nconst SkillsItem = ({ icon, altText, title, description }) => (\n  <div className=\"SkillsItem\">\n    <div className=\"SkillsItem-icon\">\n      <img src={icon} alt={altText} />\n    </div>\n    <div className=\"SkillsItem-title\">{title}</div>\n    <div className=\"SkillsItem-description\">{description}</div>\n  </div>\n);\n\nconst SkillItems = [\n  {\n    icon: frontend,\n    altText: 'Frontend development icon',\n    title: 'Web development',\n    description: 'Extensive knowledge and experience with web development techologies including JavaScript, TypeScript, React, NodeJS, Express and others',\n  },\n  {\n    icon: frontend,\n    altText: 'Mobile development icon',\n    title: 'Mobile development',\n    description: 'Mobile development experience in Android using Java as well as Android and ios using React Native',\n  },\n  {\n    icon: programming,\n    altText: 'General development icon',\n    title: 'General programming',\n    description: 'Additional experience with C/C++, python, as well as database systems including MongoDB, MySQL, Neo4J, and Firebase',\n  },\n]\n\nconst Skills = () => (\n  <div className=\"Section Section-Secondary Skills\" id=\"skills\">\n    <div className=\"Skills-container\">\n      <div className=\"Section-header\">\n        Skills\n      </div>\n      <div className=\"Skills-description\">\n        Through my computer engineering degree, work experience, and own personal projects, I have gained experience in many areas of development. Some of these areas include web, mobile, and integrated development.\n      </div>\n      <div className=\"Skills-items-container\">\n        {SkillItems.map(item => <SkillsItem {...item} key={item.title} />)}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Skills;\n","import React from 'react';\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    class=\"feather feather-external-link\"\n  >\n    <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n    <polyline points=\"15 3 21 3 21 9\"></polyline>\n    <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n  </svg>\n)\n","import React from 'react';\nimport classNames from 'classnames';\nimport ExternalLink from '../assets/ExternalLink';\nimport { GroupedExperiences } from '../constants/Experience';\nimport './Experience.scss';\n\nconst ExperienceItem = ({ companyName, companyLink, title, date, description, rightAlign, onRight, shouldRenderDivider }) => {\n  const mappedDescriptions = description.map(d => <div className=\"ExperienceItem-description-item\" key={d}>{d}</div>);\n  const className = classNames('ExperienceItem', { 'ExperienceItem-right-align': rightAlign, 'ExperienceItem-on-right': onRight});\n  const dividerClassName = classNames('ExperienceItem-divider', {'ExperienceItem-divider-right': onRight});\n  return (\n    <div className={className}>\n      <div className=\"ExperienceItem-header\">\n        <a href={companyLink} className='ExperienceItem-company-name' target=\"_blank\" rel=\"noopener noreferrer\">\n          {companyName}\n          {companyName && <ExternalLink />}\n        </a>\n        <div className=\"ExperienceItem-date\">{date}</div>\n      </div>\n      <div className=\"ExperienceItem-job-title\">{title}</div>\n      <div className=\"ExperienceItem-description\">{mappedDescriptions}</div>\n      {shouldRenderDivider && <div className={dividerClassName} />}\n    </div>\n  );\n};\n\nconst Experience = () => {\n\n  const renderExperienceItems = (group, rowIndex) => {\n    const shouldRenderDivider = rowIndex !== GroupedExperiences.length - 1;\n    return (\n      <div className=\"Experience-row\" key={rowIndex}>\n        {group.map((item, index) =>\n          <ExperienceItem\n            {...item}\n            rightAlign={rowIndex % 2 === 1}\n            onRight={index === 1}\n            key={`${item.companyName} ${item.date}`}\n            shouldRenderDivider={shouldRenderDivider}\n          />,\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Section Section-Primary Experience\" id=\"experience\">\n      <div className=\"Experience-background\" />\n      <div className=\"Experience-container\">\n        <div className=\"Section-header\">\n          Experience\n        </div>\n        <div className=\"Experience-items-container\">\n          {GroupedExperiences.map(renderExperienceItems)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport './Projects.scss';\n\nconst Projects = () => (\n  <div className=\"Section Section-Secondary Projects\" id=\"projects\">\n    <div className=\"Projects-container\">\n        <div className=\"Section-header\">\n          Projects\n        </div>\n    </div>\n  </div>\n);\n\nexport default Projects;\n","import React from 'react';\nimport NavBar from './components/NavBar';\nimport About from './sections/About';\nimport Skills from './sections/Skills';\nimport Experience from './sections/Experience';\nimport Projects from './sections/Projects';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <About />\n      <Skills />\n      <Experience />\n      <Projects />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}